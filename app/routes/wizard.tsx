import { useMemo, useState } from "react";

import {
   Button,
   Card,
   CardContent,
   CardDescription,
   CardFooter,
   CardHeader,
   CardTitle,
} from "@/components/ui";
import { LibraryLocationCard, WelcomeCard } from "@/modules/wizard/components/";

// @ts-expect-error types generated by react-router
import type { Route } from "./+types/wizard";

export function meta({}: Route.MetaArgs) {
   return [];
}

export namespace Wizard {
   export type CardProps = {
      nextStep: () => void;
      previousStep: () => void;
   };
}

export default function Wizard() {
   const [step, setStep] = useState(0);
   const cardProps = useMemo<Omit<Wizard.CardProps, "active">>(
      () => ({
         nextStep: () => setStep((prev) => prev + 1),
         previousStep: () => setStep((prev) => Math.max(prev - 1, 0)),
      }),
      [setStep]
   );

   return (
      <div className="h-full w-full flex flex-start flex-col items-center justify-center gap-4">
         <div className="grid grid-cols-2 gap-4 grid-rows-2">
            {["default", "warn", "error", "success"].map((variant) => (
               <Card
                  key={variant}
                  variant={variant as any}
                  className="w-full max-w-xl mx-4"
                  // type="inner"
               >
                  <CardHeader>
                     <CardTitle>
                        {variant[0].toUpperCase()}
                        {variant.slice(1)}
                     </CardTitle>
                     <CardDescription>
                        Lorem ipsum dolor sit amet consectetur adipisicing elit.
                        Itaque, cupiditate.
                     </CardDescription>
                  </CardHeader>
                  <CardContent>
                     Lorem ipsum dolor sit amet consectetur adipisicing elit.
                     Quas excepturi, sed consequatur consectetur fuga
                     necessitatibus dignissimos molestias facere mollitia est
                     id, officia soluta asperiores esse qui? Mollitia iste
                     quibusdam neque!
                  </CardContent>
               </Card>
            ))}
         </div>
         {step === 1 && <WelcomeCard {...cardProps} />}
         {step === 1 && <LibraryLocationCard {...cardProps} />}
      </div>
   );
}
